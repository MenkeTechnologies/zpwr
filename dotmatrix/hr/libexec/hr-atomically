#!/usr/bin/env bash
#
# Usage: hr atomically <command>
#
# Summary: Run command on series of git revisions to determine atomicity
#
# Help: Usually the defaults will work just fine:
#
#    $ [hr] atomically rake
#
# The above will run `rake` on each commit between you and origin on your current branch.

if [ "$1" = "--complete" ]; then
  echo --range
  echo --quiet
  echo --verbose
  exit
fi

if [ -n "$(git status --porcelain)" ]; then
  echo "ERROR: You have a dirty working copy. This command would remove any files not already checked in"
  exit 1
fi

log() {
  if [ -z "$quiet" ]; then
    echo
    if [ $# -gt 0 ]; then
      echo $@
      echo
    fi
  fi
}

debug() {
  if [ $verbose ]; then echo $@; fi
}

# Defaults
b="$(git symbolic-ref HEAD 2>/dev/null)"
branch="`basename $b`"
range="origin/${branch-master}..${branch-master}"
verbose=
quiet=

while [ $# -gt 0 ]; do
  case "$1" in
    -r|--range) range=$2; shift ;;
    -q|--quiet) quiet=1 ;;
    -v|--verbose) verbose=1 ;;
    (--) shift; break ;;
    (*) break ;;
  esac
  shift
done

program=$@

debug "Range: $range"
debug "Program: $program"

git rev-list --reverse $range | while read rev; do
  trap "exit 1" SIGINT SIGTERM
  log "Running at revision $rev"
  git checkout $rev --quiet && git clean -fd && eval $program || exit 1
  log
  trap - SIGINT SIGTERM
done

git checkout $branch --quiet
