" ~/.vim/sessions/gvim.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 25 April 2018 at 00:54:15.
" Open this file in Vim and run :source % to restore your session.

set guioptions=egmrL
silent! set guifont=Inconsolata\ Nerd\ Font:h11
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
    set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'black_angus' | colorscheme black_angus | endif
"call setqflist([])
"let SessionLoad = 1
"if &cp | set nocp | endif
"let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
"let v:this_session=expand("<sfile>:p")
cd ~/Documents/shellScripts
"if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
    "let s:wipebuf = bufnr('%')
"endif
"set shortmess=aoO
"badd +106 updater.sh
"badd +27 test.sh
"badd +0 archetypeShower.sh
"argglobal
"silent! argdel *
"$argadd updater.sh
"edit archetypeShower.sh
"set splitbelow splitright
"wincmd _ | wincmd |
"vsplit
"wincmd _ | wincmd |
"vsplit
"wincmd _ | wincmd |
"vsplit
"wincmd _ | wincmd |
"vsplit
"wincmd _ | wincmd |
"vsplit
"wincmd _ | wincmd |
"vsplit
"6wincmd h
"wincmd w
"wincmd w
"wincmd w
"wincmd w
"wincmd w
"wincmd w
"set nosplitbelow
"wincmd t
"set winminheight=1 winheight=1 winminwidth=1 winwidth=1
"exe 'vert 1resize ' . ((&columns * 30 + 157) / 314)
"exe 'vert 2resize ' . ((&columns * 33 + 157) / 314)
"exe 'vert 3resize ' . ((&columns * 47 + 157) / 314)
"exe 'vert 4resize ' . ((&columns * 71 + 157) / 314)
"exe 'vert 5resize ' . ((&columns * 82 + 157) / 314)
"exe 'vert 6resize ' . ((&columns * 25 + 157) / 314)
"exe 'vert 7resize ' . ((&columns * 20 + 157) / 314)
"argglobal
"enew
"" file __Tag_List__
"setlocal fdm=manual
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=9999
"setlocal fml=0
"setlocal fdn=20
"setlocal fen
"wincmd w
"argglobal
"enew
"" file NERD_tree_1
"setlocal fdm=manual
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=0
"setlocal fml=1
"setlocal fdn=20
"setlocal nofen
"wincmd w
"argglobal
"terminal ++curwin ++cols=47 ++rows=102 tmux new-session -t vimmers
"setlocal fdm=manual
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=0
"setlocal fml=1
"setlocal fdn=20
"setlocal fen
"let s:l = 1 - ((0 * winheight(0) + 51) / 102)
"if s:l < 1 | let s:l = 1 | endif
"exe s:l
"normal! zt
"1
"normal! 0
"wincmd w
"argglobal
"setlocal fdm=marker
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=1
"setlocal fml=1
"setlocal fdn=20
"setlocal fen
"let s:l = 17 - ((16 * winheight(0) + 51) / 102)
"if s:l < 1 | let s:l = 1 | endif
"exe s:l
"normal! zt
"17
"normal! 0
"wincmd w
"argglobal
"if bufexists('updater.sh') | buffer updater.sh | else | edit updater.sh | endif
"setlocal fdm=marker
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=1
"setlocal fml=1
"setlocal fdn=20
"setlocal fen
"let s:l = 4 - ((3 * winheight(0) + 51) / 102)
"if s:l < 1 | let s:l = 1 | endif
"exe s:l
"normal! zt
"4
"normal! 0
"wincmd w
"argglobal
"enew
"file __LOTR__
"setlocal fdm=manual
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=0
"setlocal fml=1
"setlocal fdn=20
"setlocal nofen
"wincmd w
"argglobal
"enew
"file vim-minimap
"setlocal fdm=manual
"setlocal fde=0
"setlocal fmr={{{,}}}
"setlocal fdi=#
"setlocal fdl=0
"setlocal fml=1
"setlocal fdn=20
"setlocal fen
"wincmd w
"5wincmd w
"exe 'vert 1resize ' . ((&columns * 30 + 157) / 314)
"exe 'vert 2resize ' . ((&columns * 33 + 157) / 314)
"exe 'vert 3resize ' . ((&columns * 47 + 157) / 314)
"exe 'vert 4resize ' . ((&columns * 71 + 157) / 314)
"exe 'vert 5resize ' . ((&columns * 82 + 157) / 314)
"exe 'vert 6resize ' . ((&columns * 25 + 157) / 314)
"exe 'vert 7resize ' . ((&columns * 20 + 157) / 314)
"tabnext 1
"if exists('s:wipebuf') && s:wipebuf != bufnr('%')
    "" silent exe 'bwipe ' . s:wipebuf
"endif
"" unlet! s:wipebuf
"set winheight=1 winwidth=20 shortmess=filnxtToOIc
"set winminheight=1 winminwidth=1
"let s:sx = expand("<sfile>:p:r")."x.vim"
"if file_readable(s:sx)
"endif
"let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

"1wincmd w
"tabnext 1
"let s:bufnr_save = bufnr("%")
"let s:cwd_save = getcwd()
"Tlist
"if !getbufvar(s:bufnr_save, '&modified')
    "let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')
    "if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
        "silent execute 'bwipeout' s:bufnr_save
    "endif
"endif
"2wincmd w
"tabnext 1
"let s:bufnr_save = bufnr("%")
"let s:cwd_save = getcwd()
"NERDTree ~/Documents/shellScripts
"if !getbufvar(s:bufnr_save, '&modified')
    "let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')
    "if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
        "silent execute 'bwipeout' s:bufnr_save
    "endif
"endif
"1resize 102|vert 1resize 30|2resize 102|vert 2resize 33|3resize 102|vert 3resize 47|4resize 102|vert 4resize 71|5resize 102|vert 5resize 82|6resize 102|vert 6resize 25|7resize 102|vert 7resize 20|
"5wincmd w
"tabnext 1
"if exists('s:wipebuf')
    "if empty(bufname(s:wipebuf))
        "if !getbufvar(s:wipebuf, '&modified')
            "let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
            "if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
                "silent execute 'bwipeout' s:wipebuf
            "endif
        "endif
    "endif
"endif
"doautoall SessionLoadPost
"unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
edit test.sh
vsplit

LOTRToggle
MinimapToggle
NERDTreeToggle

TlistAddFiles *
TlistToggle

wincmd h
terminal tmux new-session -t vimmers
wincmd l

exe 'vert 1resize '.40
winpos 0 0
set lines=1000
set columns=1000
set transparency=15
set transparency=15
