     #s                                                    
    #:8                                                    
   #.88       ..    .     :       x.    .        uL   ..   
  #:888ooo  .888: x888  x888.   .@88k  z88u    .@88b  @88R 
#-*8888888 ~`8888~'888X`?888f` ~"8888 ^8888   '"Y888k/"*P  
  #8888      X888  888X '888>    8888  888R      Y888L     
  #8888      X888  888X '888>    8888  888R       8888     
  #8888      X888  888X '888>    8888  888R       `888N    
 #.8888Lu=   X888  888X '888>    8888 ,888B .  .u./"888&   
 #^%888*    "*88%""*88" '888!`  "8888Y 8888"  d888" Y888*" 
   #'Y"       `~    "    `"`     `Y"   'YP    ` "Y   Y"    

#
# https://github.com/MenkeTechnologies
#

#{{{                    MARK:Bindings
#**************************************************************
bind-key L last-window
bind-key | split-window -h
bind-key - split-window -v

# unquoted \ broke in tmux v3.0
bind-key '\' split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key + split-window -v -c "#{pane_current_path}" \; select-pane -l\; kill-pane
bind-key Y split-window -v -c "#{pane_current_path}" \; select-pane -l\; kill-pane

bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
# set some batch actions to keybidings
bind-key D source-file ~/.zpwr/.tmux/control-window
bind-key F source-file ~/.zpwr/.tmux/four-panes
bind-key E source-file ~/.zpwr/.tmux/fourVertical
bind-key G source-file ~/.zpwr/.tmux/eight-panes
bind-key O source-file ~/.zpwr/.tmux/sixteen-panes
bind-key R source-file ~/.zpwr/.tmux/thirtytwo-panes-repl
bind-key T source-file ~/.zpwr/.tmux/config-files
bind-key l source-file ~/.zpwr/.tmux/learn
bind-key r source-file ~/.tmux.conf \; display "Tmux Reloaded!"
bind-key x kill-pane
bind-key w choose-tree
bind-key P paste-buffer
bind-key S set-window-option synchronize-panes
# show pane numbers for 5 secs
bind-key q display-panes -d 5000
# rebind n and p for recursive, successive keypresses
bind-key -r n next-window
bind-key -r p previous-window
# unquoted { broke in tmux v3.0
bind-key -r '{' rotate-window
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5

#}}}***********************************************************

#{{{                    MARK:Options
#**************************************************************
set-window-option -g monitor-activity off
set-window-option -g pane-active-border-style fg=colour99,bg=black
set-window-option -g pane-border-style fg=blue,bg=black
set-option -g message-style fg=white,bold,bg=blue
set-option -g mode-style fg=white,bold,bg=blue

#scrollback to 30,000 lines
#set-option -g history-limit 30000

#automatically renumber windows
set-option -g renumber-windows on

#display messages for 2 seconds
set-option -g display-time 2000

#allow vi keybindings in tmux command mode :
set-option -g status-keys vi


#bind-key _ select-layout even-vertical
#bind-key = select-layout even-horizontal
#set-window-option -g window-status-current-bg yellow
q
# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# reduce lag between pefix and command
set-option -s escape-time 1

#loud or quiet?
#set-option -g visual-activity on
#set-option -g visual-bell off
#set-option -g visual-silence off
#set-option -g bell-action none


set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmpux-prefix-highlight'
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @plugin 'tmux-plugins/tmux-battery'
set-option -g @resurrect-processes ':all:'
#set-option -g @continuum-restore 'on'

#set-option -g @resurrect-capture-pane-contents 'on'
#set-option -g @resurrect-strategy-vim 'session'

# Other examples:
# set-option -g @plugin 'github_username/plugin_name'
# set-option -g @plugin 'git@github.com/user/plugin'
# set-option -g @plugin 'git@bitbucket.com/user/plugin'


set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

set-option -g default-shell $SHELL
# stop right status line in powerline from shrinking
set-option -g status-right-length 250

#}}}***********************************************************

#{{{                    MARK:Cross OS and tmux version
#**************************************************************
#macOS and linux have different powerline locations etc
if-shell "uname -s | grep -iq Darwin" "source-file ~/.zpwr/.tmux/tmux-mac" "source-file ~/.zpwr/.tmux/tmux-linux"

if-shell "uname -r | grep -iq icrosoft" "source-file ~/.zpwr/.tmux/tmux-wsl" ""

#need to check tmux version due to backwards incompatible mouse configuration

# regen the cross OS sym link
if-shell "[ ! -d ~/.tmux/powerline ]" "run-shell \"ln -sf $(sudo python3 -m pip show powerline-status | \grep --color=always '^Location' | awk '{print $2}')/powerline ~/.tmux/powerline\"" ""

# log if sym link already exists
if-shell "[ -d ~/.tmux/powerline ] && tmux has-session" "display-message 'Powerline link exists!'" ""

# log if sym link does not exists
if-shell "[ ! -d ~/.tmux/powerline ] && tmux has-session" "display-message 'Did not regen powerline link!'" ""

# source conf for tmux version <= 2.1 or > 2.1
if-shell "[ `tmux -V | awk '{print ($2 >= 2.1)}'` -eq 1 ]" 'source ~/.zpwr/.tmux/tmux_ge_21.conf' 'source ~/.zpwr/.tmux/tmux_lt_21.conf'

# source conf for tmux version >= 2.9 or < 2.9
if-shell "[ `tmux -V | awk '{print ($2 >= 2.9)}'` -eq 1 ]" 'source ~/.zpwr/.tmux/tmux_ge_29.conf' 'source ~/.zpwr/.tmux/tmux_lt_29.conf'

# set tmux status bar to top on WSL
if-shell "uname -r | grep -iq icrosoft" 'set -g status-position top' 'set -g status-position bottom'

# ~/.tmux/powerline is sym link to actual powerline location
# based on pip show powerlineline-status
source ~/.tmux/powerline/bindings/tmux/powerline.conf

#}}}***********************************************************

#{{{                    MARK:Plugin Manager
#**************************************************************
run-shell "powerline-daemon -q"

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)

run '~/.tmux/plugins/tpm/tpm'

#}}}***********************************************************
