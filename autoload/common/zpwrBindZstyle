# -*- mode: sh -*-
# vim: set ft=sh:
function zpwrBindZstyle(){

    #{{{                    MARK:Completions
#**************************************************************
zpwrWeeklyCachingPolicy () {
    # rebuild if cache is more than a week old
    local -a oldp
    oldp=( "$1"(Nm+7) )
    (( $#oldp ))
}

zpwrDailyCachingPolicy () {
    # rebuild if cache is more than a week old
    local -a oldp
    oldp=( "$1"(Nm+1) )
    (( $#oldp ))
}
# do not include pwd after ../
zstyle ':completion:*' ignore-parents parent pwd

# remove slash if argument is a directory
zstyle ':completion:*' squeeze-slashes true
# Enable completion caching, use rehash to clear
zstyle ':completion:*' use-cache on

# compsys cache dir
zstyle ':completion:*' cache-path "$ZPWR_COMPSYS_CACHE"

if [[ ! -d "$ZPWR_COMPSYS_CACHE" ]]; then
    logg "Forced to create ZPWR_COMPSYS_CACHE '$ZPWR_COMPSYS_CACHE'"
    command mkdir "$ZPWR_COMPSYS_CACHE"
fi

zstyle ':completion:*' cache-policy zpwrWeeklyCachingPolicy
zstyle ':completion:*:(fasd|fasd-file|zdir)' cache-policy zpwrDailyCachingPolicy
zstyle ':completion:*:*:(f|z|zshz|zpwr-z|zpwr-gitzfordir|zpwr-gitzfordirmaster|zpwr-gitzfordirdevelop|zm|zd|zg):*:*' cache-policy zpwrDailyCachingPolicy
zstyle ':completion:force-cache:*' cache-policy zpwrDailyCachingPolicy

# separate files and dirs in _files completion
#zstyle ':completion:*' file-patterns '%p(^-/):globbed-files' '^(-/):directories' '*:all-files'

if [[ $ZPWR_COLORS_SECTIONS == true ]]; then
    # Make the list prompt friendly
    zstyle ':completion:*' list-prompt \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%SAt %s\e[44;37m%M%p\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%S, Hit TAB for more, or the characters to insert%s\e[0;'$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    # Make the selection prompt friendly when there are a lot of choices
    zstyle ':completion:*' select-prompt \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%SScrolling active: current selection at %s\e[37;44m%p\e[0;'$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    # formatting and messages, blue text with red punctuation
    zstyle ':completion:*' format \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%d\e['$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    zstyle ':completion:*:descriptions' format \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%d\e['$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    zstyle ':completion:*:corrections' format \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%d (errors: %e)\e['$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    zstyle ':completion:*:messages' format \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%d\e['$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    zstyle ':completion:*:explanations' format \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'m%d\e['$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

    zstyle ':completion:*:warnings' format \
        $'\e['$ZPWR_DESC_PRE_COLOR'm'$ZPWR_DESC_PRE$'\e[0;'$ZPWR_DESC_TEXT_COLOR$'mNo Matches for %d\e['$ZPWR_DESC_POST_COLOR'm'$ZPWR_DESC_POST$'\e[0m'

else
    # Make the list prompt friendly
    zstyle ':completion:*' list-prompt \
        "%SAt %s%M%pS, Hit TAB for more, or the characters to insert%s"

    # Make the selection prompt friendly when there are a lot of choices
    zstyle ':completion:*' select-prompt \
        "%SScrolling active: current selection at %s%p"

    # formatting and messages, blue text with red punctuation
    zstyle ':completion:*' format \
        "$ZPWR_DESC_PRE%d$ZPWR_DESC_POST"

    zstyle ':completion:*:descriptions' format \
        "$ZPWR_DESC_PRE%d$ZPWR_DESC_POST"

    zstyle ':completion:*:corrections' format \
        "$ZPWR_DESC_PRE%d (errors: %e)$ZPWR_DESC_POST"

    zstyle ':completion:*:messages' format \
        "$ZPWR_DESC_PRE%d$ZPWR_DESC_POST"

    zstyle ':completion:*:explanations' format \
        "$ZPWR_DESC_PRE%d$ZPWR_DESC_POST"

    zstyle ':completion:*:warnings' format \
        "No Matches for %d"

fi

zstyle ':completion:*' list-separator "$ZPWR_CHAR_LOGO"
zstyle ':completion:*' auto-description 'Specify: %d'

# offer indexes before parameters in subscripts
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters

# using tag name as group name so ordering the groups by tag name here
zstyle ':completion:*' group-order c options commands aliases global-aliases suffix-aliases functions builtins reserved-words parameters argument-rest strings identifiers hosts commits heads commit-tags heads-local heads-remote recent-branches tags commit-objects remote-branch-names-noprefix corrections original globbed-files files fasd-file fasd zdir local-directories tmux contexts last-ten

# show command descriptions if available
zstyle ':completion:*' extra-verbose yes

# don't complete duplicates for these commands
zstyle ':completion::*:(git-add|git-rm|less|rm|vi|vim|v):*' ignore-line true

#insert unambiguous for correct completer
zstyle ':completion:*:correct:*' insert-unambiguous true

# 0 -- vanilla completion (abc => abc)
# 1 -- smart case completion (abc => Abc)
# 2 -- word flex completion (abc => A-big-Car)
# 3 -- full flex completion (abc => ABraCadabra)
zstyle ':completion:*' matcher-list '' \
    'm:{a-z\-}={A-Z\_}' 'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' 'r:|?=** m:{a-z\-}={A-Z\_}'

# parse out host aliases and hostnames from ssh config
if [[ -r "$HOME/.ssh/config" ]]; then
    ZPWR_HOSTS=(${${${(@M)${(f)"$(< ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
    ZPWR_HOSTS=($ZPWR_HOSTS ${${${(@M)${(f)"$(< ~/.ssh/config)"}:#Hostname *}#Hostname }:#*[*?]*})
fi

if (( $#ZPWR_HOSTS > 0 )); then
    zstyle ':completion:*:ssh:*' hosts $ZPWR_HOSTS
    zstyle ':completion:*:slogin:*' hosts $ZPWR_HOSTS
fi

if [[ $ZPWR_COLORS == true ]]; then

    # Add simple colors to kill
    zstyle ':completion:*:*:kill:*:processes' list-colors \
        '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'

    zstyle ':completion:*' list-colors 'ma=37;1;4;44'
    # main option for menu selection colors
    zstyle ':completion:*:builtins' list-colors '=(#b)(*)=1;30=1;37;4;43'
    zstyle ':completion:*:executables' list-colors '=(#b)(*)=1;30=1;37;44'
    zstyle ':completion:*:parameters' list-colors '=(#b)(*)=1;30=1;32;45'

    zstyle ':completion:*:abs-directories' list-colors '=(#b)(*)=1;30=1;32;45'

    zstyle ':completion:*:reserved-words' list-colors '=(#b)(*)=1;30=1;4;37;45'
    zstyle ':completion:*:functions' list-colors '=(#b)(*)=1;30=1;37;41'
    zstyle ':completion:*:aliases' list-colors '=(#b)(*)=1;30=34;42;4'
    zstyle ':completion:*:suffix-aliases' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:global-aliases' list-colors '=(#b)(*)=1;30=1;34;43;4'
    zstyle ':completion:*:users' list-colors '=(#b)(*)=1;30=1;37;42'
    zstyle ':completion:*:hosts' list-colors '=(#b)(*)=1;30=1;37;43'
    zstyle ':completion:*:global-aliases' list-colors '=(#b)(*)=1;30=1;34;43;4'

    zstyle ':completion:*:corrections' list-colors '=(#b)(*)=1;30=1;37;4;43'
    zstyle ':completion:*:original' list-colors '=(#b)(*)=1;30=34;42;4'

    if [[ $ZPWR_COLORS_VERBS == true ]]; then
        #zpwr verbs
        zstyle ':completion:*:zpwr-vim' list-colors '=(#b)(*)=1;30=1;36;44'
        zstyle ':completion:*:zpwr-emacs' list-colors '=(#b)(*)=1;30=1;37;45'
        zstyle ':completion:*:zpwr-regen' list-colors '=(#b)(*)=1;30=1;32;45'
        zstyle ':completion:*:zpwr-clean' list-colors '=(#b)(*)=1;30=1;4;37;45'
        zstyle ':completion:*:zpwr-misc' list-colors '=(#b)(*)=1;30=37;46'
        zstyle ':completion:*:zpwr-travis' list-colors '=(#b)(*)=1;30=1;34;41'
        zstyle ':completion:*:zpwr-learn' list-colors '=(#b)(*)=1;30=1;32;44'
        zstyle ':completion:*:zpwr-search' list-colors '=(#b)(*)=1;30=1;34;43'
        zstyle ':completion:*:zpwr-update' list-colors '=(#b)(*)=1;30=1;37;46'
        zstyle ':completion:*:zpwr-cd' list-colors '=(#b)(*)=1;30=1;37;42'
        zstyle ':completion:*:zpwr-forgit' list-colors '=(#b)(*)=1;30=34;42'
        zstyle ':completion:*:zpwr-git' list-colors '=(#b)(*)=1;30=1;37;41'
        zstyle ':completion:*:zpwr-github' list-colors '=(#b)(*)=1;30=1;4;37;45'
        zstyle ':completion:*:zpwr-gitrepos' list-colors '=(#b)(*)=1;30=1;4;36;44'
        zstyle ':completion:*:zpwr-clipboard' list-colors '=(#b)(*)=1;30=1;36;44'
    fi

    # git commit colors
    zstyle ':completion:*:*:commits' list-colors '=(#b)(*)='$ZPWR_COMMIT_STYLE
    zstyle ':completion:*:heads' list-colors '=(#b)(*)=1;30=34;42;4'
    zstyle ':completion:*:commit-tags' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:cached-files' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:files' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:blobs' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:blob-objects' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:trees' list-colors '=(#b)(*)=1;30=1;34;41;4'

    zstyle ':completion:*:tags' list-colors '=(#b)(*)=1;30=1;34;41;4'

    zstyle ':completion:*:heads-local' list-colors '=(#b)(*)=1;30=1;34;43;4'
    zstyle ':completion:*:heads-remote' list-colors '=(#b)(*)=1;30=1;37;46'
    zstyle ':completion:*:modified-files' list-colors '=(#b)(*)=1;30=1;37;42'
    zstyle ':completion:*:revisions' list-colors '=(#b)(*)=1;30=1;37;42'
    zstyle ':completion:*:recent-branches' list-colors '=(#b)(*)=1;30=1;37;44'
    zstyle ':completion:*:remote-branch-names-noprefix' list-colors '=(#b)(*)=1;30=1;33;46'
    zstyle ':completion:*:blobs-and-trees-in-treeish' list-colors '=(#b)(*)=1;30=1;34;43'
    zstyle ':completion:*:commit-objects' list-colors '=(#b)(*)=1;30=1;37;43'
    zstyle ':completion:*:*(git|git-checkout):*:files' list-colors '=(#b)(*)=1;30=1;32;43'
    zstyle ':completion:*:prefixes' list-colors '=(#b)(*)=1;30=1;37;43'

     # separate colors for sections of manual pages
    zstyle ':completion:*:manuals.1' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:manuals.2' list-colors '=(#b)(*)=1;30=1;37;42'
    zstyle ':completion:*:manuals.3' list-colors '=(#b)(*)=1;30=1;37;43'
    zstyle ':completion:*:manuals.4' list-colors '=(#b)(*)=1;30=37;46'
    zstyle ':completion:*:manuals.5' list-colors '=(#b)(*)=1;30=1;34;43;4'
    zstyle ':completion:*:manuals.6' list-colors '=(#b)(*)=1;30=1;37;41'
    zstyle ':completion:*:manuals.7' list-colors '=(#b)(*)=1;30=34;42;4'
    zstyle ':completion:*:manuals.8' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:manuals.9' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:manuals.n' list-colors '=(#b)(*)=1;30=1;4;37;45'
    zstyle ':completion:*:manuals.0p' list-colors '=(#b)(*)=1;30=37;46'
    zstyle ':completion:*:manuals.1p' list-colors '=(#b)(*)=1;30=37;46'
    zstyle ':completion:*:manuals.3p' list-colors '=(#b)(*)=1;30=37;46'

    # remote cpan
    zstyle ':completion:*:cpan-module' list-colors '=(#b)(*)=1;30=37;46'
    # remote pip
    zstyle ':completion:*:remote-pip' list-colors '=(#b)(*)=1;30=37;46'
    # remote gem
    zstyle ':completion:*:remote-gem' list-colors '=(#b)(*)=1;30=37;46'
    # remote cargo
    zstyle ':completion:*:remote-crate' list-colors '=(#b)(*)=1;30=1;36;44'

    # pgrep and kill
    zstyle ':completion:*:processes' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:processes-names' list-colors '=(#b)(*)=1;30=1;37;43'
    zstyle ':completion:*:pname' list-colors '=(#b)(*)=1;30=1;37;43'

   # separate colors for git commans types
    zstyle ':completion:*:main-porcelain-commands' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:user-commands' list-colors '=(#b)(*)=1;30=1;37;42'
    zstyle ':completion:*:third-party-commands' list-colors '=(#b)(*)=1;30=1;37;43'
    zstyle ':completion:*:ancillary-manipulator-commands' list-colors '=(#b)(*)=1;30=37;46'
    zstyle ':completion:*:ancillary-interrogator-commands' list-colors '=(#b)(*)=1;30=1;34;43;4'
    zstyle ':completion:*:interaction-commands' list-colors '=(#b)(*)=1;30=1;37;41'
    zstyle ':completion:*:plumbing-manipulator-commands' list-colors '=(#b)(*)=1;30=34;42;4'
    zstyle ':completion:*:plumbing-interrogator-commands' list-colors '=(#b)(*)=1;30=1;34;41;4'
    zstyle ':completion:*:plumbing-sync-commands' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:plumbing-sync-helper-commands' list-colors '=(#b)(*)=1;30=1;4;37;45'
    zstyle ':completion:*:plumbing-internal-helper-commands' list-colors '=(#b)(*)=1;30=37;46'

    zstyle ':completion:*:zdir' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:fasd' list-colors '=(#b)(*)=1;30=1;37;42'
    zstyle ':completion:*:fasd-file' list-colors '=(#b)(*)=1;30=1;33;45'
    zstyle ':completion:*:*:*:*:vtags' list-colors '=(#b)(*)=1;37;45'
    zstyle ':completion:*:s-providers' list-colors '=(#b)(*)=1;30=1;36;44'

    if [[ "$ZPWR_OS_TYPE" == darwin ]]; then
        # homebrew tags
        zstyle ':completion::complete:brew-cask:argument-rest:list' list-colors '=(#b)(*)=1;30=1;36;44'
        zstyle ':completion:*:formulae' list-colors '=(#b)(*)=1;30=1;36;44'
        zstyle ':completion:*:*:brew-cask:*:list' list-colors '=(#b)(*)=1;30=1;36;44'
        zstyle ':completion:*:common-commands' list-colors '=(#b)(*)=1;30=1;37;45'
        zstyle ':completion:*:all-commands' list-colors '=(#b)(*)=1;30=1;37;42'
    fi

    zstyle ':completion:*:packages' list-colors '=(#b)(*)=1;30=1;36;44'

    # npm
    zstyle ':completion:*:npm-search' list-colors '=(#b)(*)=1;30=1;36;44'
    zstyle ':completion:*:npm-cache' list-colors '=(#b)(*)=1;30=1;37;46'

    # tmux
    zstyle ':completion:*:*:*:*:attached-sessions' list-colors '=(#b)(*)=1;30=1;37;43'
    zstyle ':completion:*:*:*:*:detached-sessions' list-colors '=(#b)(*)=1;30=1;37;45'

    #zstyle ':completion:*:*:commands' list-colors '=(#b)([a-zA-Z]#)([0-9_.-]#)([a-zA-Z]#)*=0;34=1;37;45=0;34=1;37;45'
    zstyle ':completion:*:*:commands' list-colors '=(#b)(*)=1;37;45'

    zstyle ':completion:*:*:tmux' list-colors '=(#b)(*)=1;37;45'
    zstyle ':completion:*:*:last-ten' list-colors '=(#b)(*)=1;33;45'
    zstyle ':completion:*:*:last-line' list-colors '=(#b)(*)=1;37;44'
    zstyle ':completion:*:*:last-clip' list-colors '=(#b)(*)=1;37;45'
    #zstyle ':completion:*:*:kill:*' list-colors '=(#b) #([0-9]#)*( *[a-z])*=34=31=33'
    #COMMON_ZSTYLE_OPTS_NAMED='reply=("${${PREFIX:+=(#bi)($PREFIX:t)(?)(*)==37;45=37;43=34}:-=(#b)(*)=1;30=1;37;46}")'


    zstyle -e ':completion:*:local-directories' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    zstyle -e ':completion:*:*:f:*:*' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    zstyle -e ':completion:*:globbed-files' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    zstyle -e ':completion:*:argument-rest:*' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    zstyle -e ':completion:*:all-files' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    zstyle -e ':completion:*:files' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    zstyle -e ':completion:*:directories' list-colors "$ZPWR_COMMON_ZSTYLE_OPTS"
    #zstyle -e ':completion:*:named-directories' list-colors "$COMMON_ZSTYLE_OPTS_NAMED"
    zstyle ':completion:*:named-directories' list-colors '=(#b)(*)=1;30=1;37;46'

    zstyle ':completion:*:*:*:*:options' list-colors '=(#b)([-<)(>]##)[ ]#([a-zA-Z0-9_.,:?@#-]##)[ ]#([<)(>]#)[ ]#([a-zA-Z0-9+?.,()@3-]#)*=1;32=1;31=34=1;31=34'
fi
zstyle ':completion:*:killall:*' command 'ps -o command'

# use tag names as menu select separators
zstyle ':completion:*' group-name ''

# divide man pages by sections
zstyle ':completion:*:manuals' separate-sections true

# Ignore compsys completion functions
#zstyle ':completion:*:functions' ignored-patterns '_*'

# zstyle ':completion:*' ignored-patterns '*..' # BREAKS find -ctime <tab>

# ignore .. as completion option
zstyle ':completion:*:files' ignored-patterns '*..'
zstyle ':completion:*:files' ignored-patterns '*.'
#}}}***********************************************************
#{{{                    MARK:ZPWR verbs zstyle
#**************************************************************
#not working for zpwr subcommands
zstyle ":completion:*:*:zpwr-gitedittag:*:*:commit-tags" sort false
zstyle ':completion:*:*:(zpwr-z|zpwr-gitzfordir|zpwr-gitzfordirmaster|zpwr-gitzfordirdevelop|zm|zd|zg|z|zs):*:*' group-order options argument-rest globbed-files fasd-file fasd zdir files last-ten

zstyle ':completion::megacomplete:zpwr-gitedittag::commit-tags' sort false

#working
zstyle ":completion:*:*:*:*:*:zdir" sort false
zstyle ":completion:*:*:*:*:*:fasd" sort false
zstyle ':completion:*:*:(zpwr-z|zpwr-gitzfordir|zpwr-gitzfordirmaster|zpwr-gitzfordirdevelop|zm|zd|zg):*:*' sort false
#}}}***********************************************************

#{{{                    MARK:fzf-tab change fzf cmd
#**************************************************************
zstyle ':fzf-tab:*' command ${FZF_TAB_COMMAND:-fzf} $FZF_TAB_OPTS
#}}}***********************************************************

}

zpwrBindZstyle "$@"
