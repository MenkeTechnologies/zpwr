# -*- mode: sh -*-
# vim: set ft=sh:
function digs(){

    if [[ -z "$1" ]]; then
        zpwrLogConsoleErr "usage: digs <url...>"
        return 1
    fi

    local OPTIND opt exe secret url noport noproto ip primary colo

    while getopts "s" opt 2>/dev/null;do
        case $opt in
            s) secret=true;;
            *) zpwrLogConsoleErr "bad opt"; return 1
        esac
    done
    shift $(($OPTIND-1))

    zpwrExists grc && colo=grc || {
        colo=
        echo "No grc colorizer no defaulting to no colors"
    }

    if [[ -n $colo ]] && [[ ! -f "$HOME/conf.whois" ]]; then
        zpwrLogConsoleErr "cannot proceed without $HOME/conf.whois for grc"
        return 1
    fi

    if [[ -n "$secret" ]]; then
        zpwrExists proxychains && exe=proxychains
        zpwrExists proxychains4 && {
           zpwrIsZsh &&
                exe=(proxychains4 -q) ||
                exe="proxychains4 -q"
        }

        if [[ -z "$exe" ]]; then
            zpwrLogConsoleErr "cannot proceed without proxychains" return 1
        fi


        if zpwrExists dig;then
            for url in "$@"; do
                noport="$(echo "$url" | sed -E 's@(.*\.[^/]+)(/.*)$@\1@' | sed -E 's@:[0-9]{1,4}$@@')"
                exec 2>&1
                zpwrPrettyPrint "DIG: $noport"
                if [[ -n "$colo" ]]; then
                    $exe dig +trace -t ANY "$noport" | grcat conf.dig
                else
                    $exe dig +trace -t ANY "$noport"
                fi

                noproto="$(echo "$noport" | sed -E 's@https://|http://@@')"
                zpwrPrettyPrint "HOST: $noproto"
                out="$($exe host "$noproto")"
                if zpwrExists lolcat; then
                    echo "$out" | lolcat
                else
                    echo "$out"
                fi
                echo
                if echo "$out" | command grep -sq 'address';then
                    #regular domain name
                    ip="$(echo "$out" | command grep 'address' | head -n 1 | awk '{print $4}')"
                    if [[ ${noproto: -1} == "." ]]; then
                        noproto="${noproto:0:-1}"
                    fi
                    zpwrPrettyPrint "DIG: $ip"
                    if [[ -n "$colo" ]]; then
                        $exe dig -x "$ip" | grcat conf.dig
                    else
                        $exe dig -x "$ip"
                    fi

                    primary="$(echo "$noproto" | sed -E 's@^(.*)\.([^.]+)\.([^.]+)$@\2.\3@')"
                    out="$($exe whois "$primary")"
                    if echo "$out" | command grep -sq 'No match';then
                        zpwrPrettyPrint "WHOIS: $ip"
                        if [[ -n "$colo" ]]; then
                            $exe whois "$ip" | grcat "$HOME/conf.whois"
                        else
                            $exe whois "$ip"
                        fi
                    else
                        zpwrPrettyPrint "WHOIS: $primary"
                        if [[ -n "$colo" ]]; then
                            echo "$out" | grcat "$HOME/conf.whois"
                            echo
                            zpwrPrettyPrint "WHOIS: $ip"
                            $exe whois "$ip" | grcat  "$HOME/conf.whois"
                        else
                            echo "$out"
                            echo
                            zpwrPrettyPrint "WHOIS: $ip"
                            $exe whois "$ip"
                        fi
                    fi
                else
                    out="$($exe whois "$noproto")"
                    if echo "$out" | command grep -sq 'No match';then
                        zpwrPrettyPrint "WHOIS: $ip"
                        if [[ -n "$colo" ]]; then
                            $exe whois "$ip" | grcat "$HOME/conf.whois"
                        else
                            $exe whois "$ip"
                        fi
                    else
                        zpwrPrettyPrint "WHOIS: $noproto"

                        if [[ -n "$colo" ]]; then
                            echo "$out" | grcat "$HOME/conf.whois"
                            zpwrPrettyPrint "WHOIS: $ip"
                            $exe whois "$ip" | grcat "$HOME/conf.whois"
                        else
                            echo "$out"
                            zpwrPrettyPrint "WHOIS: $ip"
                            $exe whois "$ip"
                        fi
                    fi
                fi
                if zpwrExists http; then
                    zpwrPrettyPrint "HTTPIE: $url"
                    torify http -v --follow --pretty=all "$url"
                else
                    zpwrPrettyPrint "CURL: $url"
                    $exe curl -vvv -k -fsSL "$url"
                fi
                    echo
                    echo
                    zpwrPrettyPrint "TRACEROUTE: $noproto"
                    if [[ -n "$colo" ]]; then
                        $exe traceroute "$noproto" | grcat conf.traceroute
                    else
                        $exe traceroute "$noproto"
                    fi
                exec 2>/dev/tty
            done | less -MN
        else
            zpwrLogConsoleErr "you need dig"
        fi
    else

        zpwrIsZsh && colo=(grc --colour=on) || colo="grc --colour=on "

        if zpwrExists dig; then
            for url in "$@"; do
                noport="$(echo "$url" | sed -E 's@(.*\.[^/]+)(/.*)$@\1@' | sed -E 's@:[0-9]{1,4}$@@')"
                exec 2>&1
                zpwrPrettyPrint "DIG: $noport"
                $colo $exe dig +trace "$noport"
                noproto="$(echo "$noport" | sed -E 's@https://|http://@@')"
                zpwrPrettyPrint "HOST: $noproto"
                out="$($colo $exe host "$noproto")"
                if zpwrExists lolcat; then
                    echo "$out" | lolcat
                else
                    echo "$out"
                fi
                echo
                echo
                if echo "$out" | command grep -sq 'address';then
                    #regular domain name
                    ip="$(echo "$out" | command grep 'address' | head -n 1 | awk '{print $4}')"
                    if [[ ${noproto: -1} == "." ]]; then
                        noproto="${noproto:0:-1}"
                    fi
                    zpwrPrettyPrint "DIG: $ip"
                    $colo $exe dig -x "$ip"
                    primary="$(echo "$noproto" | sed -E 's@^(.*)\.([^.]+)\.([^.]+)$@\2.\3@')"
                    out="$($exe whois "$primary")"
                    if echo "$out" | command grep -sq 'No match';then
                        zpwrPrettyPrint "WHOIS: $ip"
                        $colo -c "$HOME/conf.whois" $exe whois "$ip"
                    else
                        zpwrPrettyPrint "WHOIS: $primary"
                        echo "$out" | grcat "$HOME/conf.whois"
                        zpwrPrettyPrint "WHOIS: $ip"
                        $colo -c "$HOME/conf.whois" $exe whois "$ip"
                    fi
                else
                    out="$($colo $exe whois "$noproto")"
                    if echo "$out" | command grep -sq 'No match'; then
                        zpwrPrettyPrint "WHOIS: $ip"
                        $colo -c "$HOME/conf.whois" $exe whois "$ip"
                    else
                        zpwrPrettyPrint "WHOIS: $noproto"
                        echo "$out" | grcat  "$HOME/conf.whois"
                        zpwrPrettyPrint "WHOIS: $ip"
                        $colo -c "$HOME/conf.whois" $exe whois "$ip"
                    fi
                fi
                if zpwrExists http; then
                    zpwrPrettyPrint "HTTPIE: $url"
                    $exe http -v --follow --pretty=all "$url"
                else
                    zpwrPrettyPrint "CURL: $url"
                    $colo $exe curl -vvv -k -fsSL "$url"
                fi
                    echo
                    echo
                    zpwrPrettyPrint "TRACEROUTE: $noproto"
                    $colo $exe traceroute "$noproto"
                exec 2>/dev/tty
            done | less -MN
        else
            zpwrLogConsoleErr "you need dig"
        fi
    fi
}

digs "$@"
