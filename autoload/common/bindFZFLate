# -*- mode: sh -*-
# vim: set ft=sh:
function bindFZFLate(){
    
    exists bat && export BAT_THEME="$ZPWR_BAT_THEME"
# default value for pygmentize theme
    export PYGMENTIZE_COLOR="emacs"
    export ZPWR_COLORIZER=bat

    if [[ $ZPWR_COLORIZER == bat ]]; then

        if exists bat;then
            export FZF_COLORIZER='bat --paging never --wrap character --color always --style="numbers,grid,changes,header" {}'
            export FZF_COLORIZER_FILE_TEXT='bat --paging never --wrap character --color always --style="numbers,grid,changes,header" -l ASP "$file"'
            export FZF_COLORIZER_FILE_DEFAULT='bat --paging never --wrap character --color always --style="numbers,grid,changes,header" -l ASP "$file"'
            export FZF_COLORIZER_FILE='bat --paging never --wrap character --color always --style="numbers,grid,changes,header" "$file"'
            export ZPWR_COLORIZER='bat --paging never --wrap character --color always --style="numbers,grid,changes,header"'
            export FZF_COLORIZER_NL=''
        else
            export FZF_COLORIZER="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR {} | cat -n"
            export FZF_COLORIZER_FILE_TEXT="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR \"\$file\" | cat -n"
            export FZF_COLORIZER_FILE_DEFAULT="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR \"\$file\" | cat -n"
            export FZF_COLORIZER_FILE="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR \"\$file\" | cat -n"
            export ZPWR_COLORIZER="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR"
            export FZF_COLORIZER_NL=' | cat -n'
        fi
    else
        export FZF_COLORIZER="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR {} | cat -n"
        export FZF_COLORIZER_FILE_TEXT="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR \"\$file\" | cat -n"
        export FZF_COLORIZER_FILE_DEFAULT="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR \"\$file\" | cat -n"
        export FZF_COLORIZER_FILE="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR \"\$file\" | cat -n"
        export ZPWR_COLORIZER="pygmentize -f terminal256 -g -O style=\$PYGMENTIZE_COLOR"
        export FZF_COLORIZER_NL=' | cat -n'
    fi

    export FZF_COLORIZER_C="$ZPWR_COLORIZER -l c"
    export FZF_COLORIZER_SH="$ZPWR_COLORIZER  -l sh"
    export FZF_COLORIZER_YAML="$ZPWR_COLORIZER -l yaml"
    export FZF_COLORIZER_JAVA="$ZPWR_COLORIZER -l java"
    export FZF_DRACULA="--color=dark
    --color=fg:-1,bg:-1,hl:#5fff87,fg+:-1,bg+:-1,hl+:#ffaf5f
    --color=info:#af87ff,prompt:#5fff87,pointer:#ff87d7,marker:#ff87d7,spinner:#ff87d7"
    export FZF_JELLY="--color fg:-1,bg:-1,hl:230,fg+:3,bg+:233,hl+:229
    --color info:150,prompt:110,spinner:150,pointer:167,marker:174"


    export ZPWR_COMMON_FZF_ELEM
    ZPWR_COMMON_FZF_ELEM="--prompt='$ZPWR_FZF_LOGO ' --bind=ctrl-n:page-down,ctrl-p:page-up,tab:toggle+down,ctrl-j:down,ctrl-k:up"

#to include dirs files in search
    export FZF_DEFAULT_COMMAND='find * | ag -v ".git/"'
    export FZF_DEFAULT_OPTS="$ZPWR_COMMON_FZF_ELEM --reverse --border --height 100%"
    local rpm_cmd
    local deb_cmd
    exists rpm && rpm_cmd="rpm -qi" || rpm_cmd="stat"
    exists dpkg && deb_cmd="dpkg -I" || deb_cmd="stat"

    export FZF_CTRL_T_COMMAND='find . | ag -v ".git/"'
    export FZF_CTRL_T_OPTS="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfPreviewOptsCtrlT.sh")'"
    export FZF_CTRL_T_OPTS_2="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfPreviewOpts2Pos.sh")'"


    export FZF_ENV_OPTS_PLAIN="$ZPWR_COMMON_FZF_ELEM --preview-window=right:50%:wrap -m --border --preview '$(bash "$ZPWR_SCRIPTS/fzfEnv.sh" plain)'"
    export FZF_ENV_OPTS_VERBS_PLAIN="$ZPWR_COMMON_FZF_ELEM --preview-window=right:50%:wrap -m --border --preview '$(bash "$ZPWR_SCRIPTS/fzfEnvVerbs.sh" plain)'"
    export FZF_ENV_OPTS_CURRENT_PLAIN="$ZPWR_COMMON_FZF_ELEM --preview-window=right:50%:wrap -m --border --preview '$(bash "$ZPWR_SCRIPTS/fzfEnvCurrent.sh" plain)'"

    if [[ $ZPWR_INTRO_BANNER == ponies ]]; then
        export FZF_ENV_OPTS="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfEnv.sh" reg)'"
        export FZF_ENV_OPTS_VERBS="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfEnvVerbs.sh" reg)'"
        export FZF_ENV_OPTS_CURRENT="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfEnvCurrent.sh" reg)'"
    else
        export FZF_ENV_OPTS="$FZF_ENV_OPTS_PLAIN"
        export FZF_ENV_OPTS_VERBS="$FZF_ENV_OPTS_VERBS_PLAIN"
        export FZF_ENV_OPTS_CURRENT="$FZF_ENV_OPTS_CURRENT_PLAIN"
    fi

    export FZF_AG_OPTS="$ZPWR_COMMON_FZF_ELEM -m --delimiter : --nth 3.. --reverse --border --ansi --preview '$(bash "$ZPWR_SCRIPTS/fzfAgOpts.sh")'"

    export FZF_GTAGS_OPTS="$ZPWR_COMMON_FZF_ELEM -m --delimiter ' ' --nth 1 --reverse --border --ansi --preview '$(bash "$ZPWR_SCRIPTS/fzfGtagsOpts.sh")'"

    export FZF_SEARCH_GIT_OPTS="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfGitSearchOpts.sh")'"

    if [[ "$ZPWR_INTRO_BANNER" == ponies ]]; then
        export FZF_COMPLETION_OPTS="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfPreviewOptsPony.sh")'"
    else
        export FZF_COMPLETION_OPTS="$ZPWR_COMMON_FZF_ELEM --preview '$(bash "$ZPWR_SCRIPTS/fzfPreviewOpts.sh")'"
    fi

    if [[ $ZPWR_TABSTOP_ALIASES == true ]]; then
        alias -g ${ZPWR_GLOBAL_ALIAS_PREFIX}ff='"$($ZPWR_FZF '"$ZPWR_COMMON_FZF_ELEM"' --preview "[[ -f {} ]] && '"$FZF_COLORIZER$ZPWR_TABSTOP"'  2>/dev/null | cat -n || stat -- {} | fold -80 | head -500")"'
    fi
    alias -g ${ZPWR_GLOBAL_ALIAS_PREFIX}f="\$($ZPWR_FZF $FZF_CTRL_T_OPTS)"
    alias -g ${ZPWR_GLOBAL_ALIAS_PREFIX}z="| $ZPWR_FZF $FZF_CTRL_T_OPTS "

    local base03="234"
    local base02="235"
    local base01="240"
    local base00="241"
    local base0="244"
    local base1="245"
    local base2="254"
    local base3="230"
    local yellow="136"
    local orange="166"
    local red="160"
    local magenta="125"
    local violet="61"
    local blue="33"
    local cyan="37"
    local green="64"

# Solarized Dark color scheme for fzf
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
        --color fg:-1,bg:-1,hl:$blue,fg+:$base2,bg+:$base02,hl+:$blue
        --color info:$yellow,prompt:$yellow,pointer:$base3,marker:$base3,spinner:$yellow"

    export FZF_TAB_OPTS=(
        --ansi   # Enable ANSI color support, necessary for showing groups
        --expect='$continuous_trigger' # For continuous completion
        '--color=hl:$(( $#headers == 0 ? 108 : 255 ))'
        --nth=2,3 --delimiter='\x00'  # Don't search prefix
        --layout=reverse --height='${FZF_TMUX_HEIGHT:=100%}'
        --tiebreak=begin -m
        '--query=$query'   # $query will be expanded to query string at runtime.
        '--header-lines=$#headers' # $#headers will be expanded to lines of headers at runtime
        --print-query
    )
    export FZF_TAB_COMMAND=(
        ${=ZPWR_FZF}
        $FZF_TAB_OPTS
    )
}

bindFZFLate "$@"
